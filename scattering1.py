# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scattering1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import serial
import time
import os
import numpy as np

from threading import Thread

def readFileInt(dataName):
    if os.path.isfile(dataName):
        with open(dataName, 'r') as f:
            string=f.read()
            val=int(string)
    else:
        with open(dataName, 'w') as f:
            val=0
            string=str(val)
            f.write(string)
    return val
        
def writeFileInt(dataName, val):
    with open(dataName, 'w') as f:
        string=str(val)
        f.write(string)

            
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.rotationDataName='rot.txt'
        self.linearDataName='lin.txt'

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(731, 403)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
        self.txtbx_COMLinear = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_COMLinear.setObjectName("txtbx_COMLinear")
        self.gridLayout.addWidget(self.txtbx_COMLinear, 1, 1, 1, 1)
        self.btn_LinearConnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_LinearConnect.setObjectName("btn_LinearConnect")
        self.gridLayout.addWidget(self.btn_LinearConnect, 1, 2, 1, 1)
        self.btn_COMLinearDisconnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_COMLinearDisconnect.setObjectName("btn_COMLinearDisconnect")
        self.gridLayout.addWidget(self.btn_COMLinearDisconnect, 1, 3, 1, 3)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 6, 2, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 1, 7, 1, 2)
        self.txtbx_COMServo = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_COMServo.setObjectName("txtbx_COMServo")
        self.gridLayout.addWidget(self.txtbx_COMServo, 1, 10, 1, 2)
        self.btn_servoConnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_servoConnect.setObjectName("btn_servoConnect")
        self.gridLayout.addWidget(self.btn_servoConnect, 1, 12, 1, 3)
        self.btn_COMServoDisconnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_COMServoDisconnect.setObjectName("btn_COMServoDisconnect")
        self.gridLayout.addWidget(self.btn_COMServoDisconnect, 1, 15, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.txtbx_COMRotation = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_COMRotation.setObjectName("txtbx_COMRotation")
        self.gridLayout.addWidget(self.txtbx_COMRotation, 2, 1, 1, 1)
        self.btn_RotationConnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_RotationConnect.setObjectName("btn_RotationConnect")
        self.gridLayout.addWidget(self.btn_RotationConnect, 2, 2, 1, 1)
        self.btn_COMRotationDisconnect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_COMRotationDisconnect.setObjectName("btn_COMRotationDisconnect")
        self.gridLayout.addWidget(self.btn_COMRotationDisconnect, 2, 3, 1, 3)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 7, 1, 2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 2, 10, 1, 2)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 2, 12, 1, 3)
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout.addWidget(self.pushButton_6, 2, 15, 1, 2)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout.addWidget(self.line_2, 3, 0, 2, 17)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout.addWidget(self.line_3, 4, 4, 13, 1)
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.gridLayout.addWidget(self.label_10, 4, 5, 2, 3)
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout.addWidget(self.line_5, 4, 13, 13, 2)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 5, 0, 2, 1)
        self.btn_light_On = QtWidgets.QPushButton(self.centralwidget)
        self.btn_light_On.setObjectName("btn_light_On")
        self.gridLayout.addWidget(self.btn_light_On, 6, 15, 2, 2)
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setObjectName("label_16")
        self.gridLayout.addWidget(self.label_16, 7, 14, 2, 1)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 8, 0, 2, 1)
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setObjectName("label_11")
        self.gridLayout.addWidget(self.label_11, 8, 5, 2, 2)
        self.txtbx_rotation_currentPos = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_currentPos.setObjectName("txtbx_rotation_currentPos")
        self.gridLayout.addWidget(self.txtbx_rotation_currentPos, 9, 1, 1, 1)
        self.btn_Rotation_tare = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Rotation_tare.setObjectName("btn_Rotation_tare")
        self.gridLayout.addWidget(self.btn_Rotation_tare, 9, 2, 1, 1)
        self.txtbx_linear_currentPos = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_linear_currentPos.setObjectName("txtbx_linear_currentPos")
        self.gridLayout.addWidget(self.txtbx_linear_currentPos, 9, 8, 1, 2)
        self.btn_linear_tare = QtWidgets.QPushButton(self.centralwidget)
        self.btn_linear_tare.setObjectName("btn_linear_tare")
        self.gridLayout.addWidget(self.btn_linear_tare, 9, 10, 1, 1)
        self.btn_light_Off = QtWidgets.QPushButton(self.centralwidget)
        self.btn_light_Off.setObjectName("btn_light_Off")
        self.gridLayout.addWidget(self.btn_light_Off, 9, 15, 1, 2)
        self.line_6 = QtWidgets.QFrame(self.centralwidget)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout.addWidget(self.line_6, 10, 14, 3, 3)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 11, 0, 2, 1)
        self.txtbx_rotation_moveRel = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_moveRel.setObjectName("txtbx_rotation_moveRel")
        self.gridLayout.addWidget(self.txtbx_rotation_moveRel, 11, 1, 3, 1)
        self.btn_Rotation_moveRel = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Rotation_moveRel.setObjectName("btn_Rotation_moveRel")
        self.gridLayout.addWidget(self.btn_Rotation_moveRel, 11, 2, 3, 1)
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 11, 5, 2, 1)
        self.txtbx_linear_moveRel_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_linear_moveRel_2.setObjectName("txtbx_linear_moveRel_2")
        self.gridLayout.addWidget(self.txtbx_linear_moveRel_2, 11, 8, 3, 2)
        self.btn_linear_moveRel = QtWidgets.QPushButton(self.centralwidget)
        self.btn_linear_moveRel.setObjectName("btn_linear_moveRel")
        self.gridLayout.addWidget(self.btn_linear_moveRel, 11, 10, 3, 1)
        self.btn_beam_On = QtWidgets.QPushButton(self.centralwidget)
        self.btn_beam_On.setObjectName("btn_beam_On")
        self.gridLayout.addWidget(self.btn_beam_On, 12, 15, 3, 2)
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setObjectName("label_17")
        self.gridLayout.addWidget(self.label_17, 13, 14, 3, 1)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 14, 0, 3, 1)
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setObjectName("label_13")
        self.gridLayout.addWidget(self.label_13, 14, 5, 3, 1)
        self.btn_Rotation_moveAbs = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Rotation_moveAbs.setObjectName("btn_Rotation_moveAbs")
        self.gridLayout.addWidget(self.btn_Rotation_moveAbs, 15, 2, 2, 1)
        self.btn_linear_moveAbs = QtWidgets.QPushButton(self.centralwidget)
        self.btn_linear_moveAbs.setObjectName("btn_linear_moveAbs")
        self.gridLayout.addWidget(self.btn_linear_moveAbs, 15, 10, 2, 1)
        self.txtbx_rotation_moveAbs = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_moveAbs.setObjectName("txtbx_rotation_moveAbs")
        self.gridLayout.addWidget(self.txtbx_rotation_moveAbs, 16, 1, 1, 1)
        self.txtbx_linear_moveAbs_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_linear_moveAbs_2.setObjectName("txtbx_linear_moveAbs_2")
        self.gridLayout.addWidget(self.txtbx_linear_moveAbs_2, 16, 8, 1, 2)
        self.btn_beam_Off = QtWidgets.QPushButton(self.centralwidget)
        self.btn_beam_Off.setObjectName("btn_beam_Off")
        self.gridLayout.addWidget(self.btn_beam_Off, 16, 15, 1, 2)
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout.addWidget(self.line_4, 17, 0, 1, 17)
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.gridLayout.addWidget(self.label_14, 18, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setObjectName("label_15")
        self.gridLayout.addWidget(self.label_15, 19, 0, 1, 1)
        self.txtbx_rotation_currentPos_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_currentPos_3.setObjectName("txtbx_rotation_currentPos_3")
        self.gridLayout.addWidget(self.txtbx_rotation_currentPos_3, 19, 1, 1, 2)
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setObjectName("label_19")
        self.gridLayout.addWidget(self.label_19, 19, 5, 2, 3)
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setObjectName("label_20")
        self.gridLayout.addWidget(self.label_20, 19, 9, 1, 2)
        self.txtbx_rotation_currentPos_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_currentPos_5.setObjectName("txtbx_rotation_currentPos_5")
        self.gridLayout.addWidget(self.txtbx_rotation_currentPos_5, 19, 11, 1, 5)
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setObjectName("label_22")
        self.gridLayout.addWidget(self.label_22, 19, 16, 2, 1)
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setObjectName("label_18")
        self.gridLayout.addWidget(self.label_18, 20, 0, 1, 1)
        self.txtbx_rotation_currentPos_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_currentPos_4.setObjectName("txtbx_rotation_currentPos_4")
        self.gridLayout.addWidget(self.txtbx_rotation_currentPos_4, 20, 1, 1, 2)
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setObjectName("label_21")
        self.gridLayout.addWidget(self.label_21, 20, 9, 1, 2)
        self.txtbx_rotation_currentPos_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.txtbx_rotation_currentPos_6.setObjectName("txtbx_rotation_currentPos_6")
        self.gridLayout.addWidget(self.txtbx_rotation_currentPos_6, 20, 11, 1, 5)
        self.btn_Acquisition = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_Acquisition.setFont(font)
        self.btn_Acquisition.setObjectName("btn_Acquisition")
        self.gridLayout.addWidget(self.btn_Acquisition, 21, 5, 1, 3)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 21, 9, 1, 2)
        self.lbl_Acquiring = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_Acquiring.setFont(font)
        self.lbl_Acquiring.setObjectName("lbl_Acquiring")
        self.gridLayout.addWidget(self.lbl_Acquiring, 21, 11, 1, 4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 731, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.loadUI(MainWindow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scattering Experiment"))
        self.label_5.setText(_translate("MainWindow", "Connections"))
        self.label.setText(_translate("MainWindow", "COM Linear"))

        self.btn_LinearConnect.setText(_translate("MainWindow", "Connect"))
        self.btn_COMLinearDisconnect.setText(_translate("MainWindow", "Disconnect"))
        self.label_4.setText(_translate("MainWindow", "COM Servo"))
        # Servo COM
        self.btn_servoConnect.setText(_translate("MainWindow", "Connect"))
        self.btn_servoConnect.clicked.connect(self.connectServo)

        self.btn_COMServoDisconnect.setText(_translate("MainWindow", "Disconnect"))
        self.btn_COMServoDisconnect.clicked.connect(self.disconnectServo)


        self.label_2.setText(_translate("MainWindow", "COM Rotation"))
        # Rotation COM
        self.btn_RotationConnect.setText(_translate("MainWindow", "Connect"))
        self.btn_RotationConnect.clicked.connect(self.connectRotationCOM)

        self.btn_COMRotationDisconnect.setText(_translate("MainWindow", "Disconnect"))
        self.btn_COMRotationDisconnect.clicked.connect(self.disconnectRotationCOM)
        # Linear COM
        self.btn_LinearConnect.clicked.connect(self.connectLinearCOM)

        self.btn_COMLinearDisconnect.clicked.connect(self.disconnectLinearCOM)

        ## Rotation Current Pos
        self.txtbx_rotation_currentPos.setEnabled(False)

        ## Linear Current Pos
        self.txtbx_linear_currentPos.setEnabled(False)

        ## Rotation 
        #  Tare Button
        self.btn_Rotation_tare.clicked.connect(self.tare_rotation)
        # Move Abs button
        self.btn_Rotation_moveAbs.clicked.connect(self.moveAbsRot_btn)
        # Move Rel button
        self.btn_Rotation_moveRel.clicked.connect(self.moveRelRot_btn)

        ## Linear
        #  Tare
        self.btn_linear_tare.clicked.connect(self.tare_linear)
        # Move Abs Button
        self.btn_linear_moveAbs.clicked.connect(self.moveAbsLin_btn)
        # Move Rel Button
        self.btn_linear_moveRel.clicked.connect(self.moveRelLin_btn)

        ## Light Buttons
        self.btn_light_On.clicked.connect(self.turnOnLight)
        self.btn_light_Off.clicked.connect(self.turnOffLight)

        ## Beam Servo Buttons
        self.btn_beam_On.clicked.connect(self.turnOnBeam)
        self.btn_beam_Off.clicked.connect(self.turnOffBeam)

        ## Acquisition Button
        self.btn_Acquisition.clicked.connect(self.startAcquisition)

        self.label_3.setText(_translate("MainWindow", "TextLabel"))
        self.pushButton_3.setText(_translate("MainWindow", "Connect"))
        self.pushButton_6.setText(_translate("MainWindow", "Disconnect"))
        self.label_10.setText(_translate("MainWindow", "Linear Stage"))
        self.label_6.setText(_translate("MainWindow", "Rotation Stage"))
        self.btn_light_On.setText(_translate("MainWindow", "On"))
        self.label_16.setText(_translate("MainWindow", "Light"))
        self.label_7.setText(_translate("MainWindow", "Current Pos"))
        self.label_11.setText(_translate("MainWindow", "Current Pos"))
        self.btn_Rotation_tare.setText(_translate("MainWindow", "Tare"))
        self.btn_linear_tare.setText(_translate("MainWindow", "Tare"))
        self.btn_light_Off.setText(_translate("MainWindow", "Off"))
        self.label_8.setText(_translate("MainWindow", "Relative"))
        self.btn_Rotation_moveRel.setText(_translate("MainWindow", "Move Rel"))
        self.label_12.setText(_translate("MainWindow", "Relative"))
        self.btn_linear_moveRel.setText(_translate("MainWindow", "Move Rel"))
        self.btn_beam_On.setText(_translate("MainWindow", "On"))
        self.label_17.setText(_translate("MainWindow", "Beam"))
        self.label_9.setText(_translate("MainWindow", "Absolute"))
        self.label_13.setText(_translate("MainWindow", "Absolute"))
        self.btn_Rotation_moveAbs.setText(_translate("MainWindow", "Move Abs"))
        self.btn_linear_moveAbs.setText(_translate("MainWindow", "Move Abs"))
        self.btn_beam_Off.setText(_translate("MainWindow", "Off"))
        self.label_14.setText(_translate("MainWindow", "Acquisition"))
        self.label_15.setText(_translate("MainWindow", "SMX Exposures"))
        self.label_19.setText(_translate("MainWindow", "<html><head/><body><p>(Values separated </p><p>by comma)</p></body></html>"))
        self.label_20.setText(_translate("MainWindow", "Linear Stage"))
        self.label_22.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:7pt;\">(From,</span></p><p><span style=\" font-size:7pt;\">To,Step)</span></p></body></html>"))
        self.label_18.setText(_translate("MainWindow", "Manta Exposures"))
        self.label_21.setText(_translate("MainWindow", "Rotation Stage"))
        self.btn_Acquisition.setText(_translate("MainWindow", "Acquire"))
        self.pushButton_2.setText(_translate("MainWindow", "Stop"))
        
        self.lbl_Acquiring.setText(_translate("MainWindow", "Acquiring"))
        self.lbl_Acquiring.setStyleSheet('color: red')
        self.lbl_Acquiring.setVisible(False)

    def loadUI(self,MainWindow):
        self.updateCurrentPosTxtBx(stage='rot')
        self.updateCurrentPosTxtBx(stage='lin')
    
    def updateCurrentPosTxtBx(self,stage):
        if stage=='rot':
            position=str(readFileInt(self.rotationDataName))
            self.txtbx_rotation_currentPos.setText(position)
        if stage=='lin':
            position=str(readFileInt(self.linearDataName))
            self.txtbx_linear_currentPos.setText(position)

    def getCurrentPos(self,stage):
        if stage=='rot':
            position=self.txtbx_rotation_currentPos.text()
        if stage=='lin':
            position=self.txtbx_linear_currentPos.text()
        return int(position)

    def writeStagePos(self,stage,pos):
        if stage=='rot':
            writeFileInt(self.rotationDataName, pos)
            self.updateCurrentPosTxtBx(stage)
        
        if stage=='lin':
            writeFileInt(self.linearDataName, pos)
            self.updateCurrentPosTxtBx(stage)

    def connectLinearCOM(self):
        try:
            self.linearPortName=self.txtbx_COMLinear.text()
            self.LinSer=serial.Serial(port=self.linearPortName, baudrate=9600)
            time.sleep(1)
        except Exception as e:
            print(str(e))
    
    def disconnectLinearCOM(self):
        try:
            self.closeSerialPort(self.LinSer)
        except Exception as e:
            print(str(e))
    
    def connectServo(self):
        try:
            self.servoPortName=self.txtbx_COMServo.text()
            self.ServoSer=serial.Serial(port=self.servoPortName, baudrate=9600)
            time.sleep(1)
        except Exception as e:
            print(str(e))
    def disconnectServo(self):
        try:
            self.closeSerialPort(self.ServoSer)
        except Exception as e:
            print(str(e))
    
    def tare_rotation(self):
        self.writeStagePos('rot',0)

    def tare_linear(self):
        self.writeStagePos('lin',0)


    def connectRotationCOM(self):
        try:
            self.rotationPortName=self.txtbx_COMRotation.text()
            self.RotSer=serial.Serial(port=self.rotationPortName, baudrate=9600)
            time.sleep(1)
        except Exception as e:
            print(str(e))
    def disconnectRotationCOM(self):
        try:
            self.closeSerialPort(self.RotSer)
        except Exception as e:
            print(str(e))


    def closeSerialPort(self, serialPort):
        try:
            serialPort.close()
        except Exception as e:
            print(str(e))
    
    def moveAbsRot_btn(self):  ## For Move abs button
        stage='rot'
        targetPosition=int(self.txtbx_rotation_moveAbs.text())
        self.moveAbs(stage, target=targetPosition)
    
    def moveRelRot_btn(self):
        stage='rot'
        steps=int(self.txtbx_rotation_moveRel.text())
        self.moveRel(stage,steps)

    def moveAbsLin_btn(self):  ## For Move abs button
        stage='lin'
        targetPosition=int(self.txtbx_linear_moveAbs_2.text())
        self.moveAbs(stage, target=targetPosition)
    
    def moveRelLin_btn(self):
        stage='lin'
        steps=int(self.txtbx_linear_moveRel_2.text())
        self.moveRel(stage,steps)




    def moveAbs(self, stage, target):
        currentPos=self.getCurrentPos(stage)
        steps=target-currentPos
        self.moveRel(stage, steps)


    def moveRel(self, stage, steps):  # Main stage motion
        if stage=='rot':
            print('Move rotation: {} steps'.format(steps)) # send move command here
            time.sleep(np.abs(steps)/1000)
            pos=self.getCurrentPos(stage)+ steps
            self.writeStagePos(stage,pos)
        if stage=='lin':
            print('Move linear: {} steps'.format(steps)) # send move command here
            time.sleep(np.abs(steps)/1000)
            pos=self.getCurrentPos(stage)+ steps
            self.writeStagePos(stage,pos)


    def turnOnLight(self):
        print('Light On')

    def turnOffLight(self):
        print('Light Off')
    
    def turnOnBeam(self):
        time.sleep(1)
        print('Beam On')
        

    def turnOffBeam(self):
        time.sleep(1)
        print('Beam Off')  
        

    def startAcquisition(self):
        linstage=np.arange(0,2000,1000).astype(int)
        rotstage=np.arange(0,2000,1000).astype(int)
        
        self.lbl_Acquiring.setVisible(True); print('Satrted Acquisition...')
        self.Acquire(linstage=linstage, rotstage=rotstage)
        print('Acquisition Complete!')
        self.lbl_Acquiring.setVisible(False)
        # thread = Thread(target = self.Acquire, args = (linstage,rotstage ))
        # thread.start()
        # thread.join()

    def Acquire(self,linstage, rotstage):
        for linPos in linstage:
            self.moveAbs(stage='lin', target=linPos)
            for rotPos in rotstage:
                self.moveAbs(stage='rot', target=rotPos)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
